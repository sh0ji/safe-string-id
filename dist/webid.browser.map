{"version":3,"sources":["../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/index.js","../node_modules/slugify/index.js","constants.js","webid.js"],"names":["name","root","factory","exports","define","amd","charMap","JSON","parse","replace","string","options","Error","replacement","slug","split","reduce","result","ch","remove","lower","toLowerCase","extend","customMap","key","getCharacters","delimiter","standard","DefaultOptions","Private","WeakMap","Errors","TYPE_IS_STRING","str","TypeError","STRICT_DELIMITER","test","value","NON_STRICT_DELIMITER","VALID_PREFIX","Assertions","obj","keys","forEach","a","v","err","assertion","error","WebId","opts","configure","delim","slugifyOpts","strict","prefix","pre","suffix","suf","_str","_options","createSlug","characters","delimiterInShortid","shortid","short","generate","maxLength","length","uniqueSlug","substr","join","id","unique","get","set","trim","endsWith","startsWith","module"],"mappings":"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","file":"webid.browser.map","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * var format = require('nanoid/format')\n *\n * function random (size) {\n *   var result = []\n *   for (var i = 0; i < size; i++) result.push(randomByte())\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  /* eslint-disable */\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n  /* eslint-enable */\n\n  function replace (string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected')\n    }\n\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    var slug = string.split('')\n      .reduce(function (result, ch) {\n        return result + (charMap[ch] || ch)\n          // allowed\n          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n      }, '')\n      // trim leading/trailing spaces\n      .replace(/^\\s+|\\s+$/g, '')\n      // convert spaces\n      .replace(/[-\\s]+/g, options.replacement || '-')\n      // remove trailing separator\n      .replace('#{replacement}$', '')\n\n    return options.lower ? slug.toLowerCase() : slug\n  }\n\n  replace.extend = function (customMap) {\n    for (var key in customMap) {\n      charMap[key] = customMap[key]\n    }\n  }\n\n  return replace\n}))\n","export const getCharacters = (delimiter) => {\n\tconst standard = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_';\n\tconst replacement = (delimiter === '~') ? '-' : '~';\n\treturn (delimiter) ? standard.replace(delimiter, replacement) : standard;\n};\n\nexport const DefaultOptions = {\n\tdelimiter: '-',\n\tdelimiterInShortid: false,\n\tlower: true,\n\tmaxLength: 128,\n\tremove: null,\n\tstrict: true,\n};\n\nexport const Private = {\n\tdelimiter: new WeakMap(),\n\tprefix: new WeakMap(),\n\tsuffix: new WeakMap(),\n};\n\nexport const Errors = {\n\tTYPE_IS_STRING: str => ({\n\t\tassertion: typeof str === 'string',\n\t\terror: new TypeError(`Expected a string. Received ${typeof str}.`),\n\t}),\n\tSTRICT_DELIMITER: value => ({\n\t\tassertion: /^[\\w-._~]*$/.test(value),\n\t\terror: new Error(`${value} is not a safe delimiter.`),\n\t}),\n\tNON_STRICT_DELIMITER: value => ({\n\t\tassertion: /^\\S*$/g.test(value),\n\t\terror: new Error('The delimiter cannot be a space.'),\n\t}),\n\tVALID_PREFIX: value => ({\n\t\tassertion: /^[a-z]+/i.test(value),\n\t\terror: new Error('prefix must begin with a letter (a-z).'),\n\t}),\n};\n\nexport const Assertions = (() => {\n\tconst obj = {};\n\tObject.keys(Errors).forEach((a) => {\n\t\tobj[a] = (v) => {\n\t\t\tconst err = Errors[a](v);\n\t\t\tif (!err.assertion) {\n\t\t\t\tthrow err.error;\n\t\t\t}\n\t\t};\n\t});\n\treturn obj;\n})();\n","import short from 'shortid';\nimport slugify from 'slugify';\nimport {\n\tgetCharacters, DefaultOptions, Private, Assertions,\n} from './constants';\n\nclass WebId {\n\tconstructor(opts = {}) {\n\t\tthis.configure(opts);\n\t}\n\n\tget delimiter() {\n\t\treturn Private.delimiter.get(this);\n\t}\n\n\tset delimiter(value) {\n\t\tif (this.options.strict) {\n\t\t\tAssertions.STRICT_DELIMITER(value);\n\t\t} else {\n\t\t\tAssertions.NON_STRICT_DELIMITER(value);\n\t\t}\n\t\tPrivate.delimiter.set(this, value);\n\t}\n\n\tget prefix() {\n\t\treturn Private.prefix.get(this);\n\t}\n\n\tset prefix(value) {\n\t\tif (!value) {\n\t\t\tPrivate.prefix.set(this, '');\n\t\t\treturn;\n\t\t}\n\t\tAssertions.TYPE_IS_STRING(value);\n\t\tif (this.options.strict) Assertions.VALID_PREFIX(value);\n\t\tlet prefix = this.createSlug(value.trim(), null);\n\t\tif (prefix && !prefix.endsWith(this.delimiter)) {\n\t\t\tprefix += this.delimiter;\n\t\t}\n\t\tPrivate.prefix.set(this, prefix);\n\t}\n\n\tget suffix() {\n\t\treturn Private.suffix.get(this);\n\t}\n\n\tset suffix(value) {\n\t\tif (!value) {\n\t\t\tPrivate.suffix.set(this, '');\n\t\t\treturn;\n\t\t}\n\t\tAssertions.TYPE_IS_STRING(value);\n\t\tlet suffix = this.createSlug(value.trim(), null);\n\t\tif (suffix && !suffix.startsWith(this.delimiter)) {\n\t\t\tsuffix = this.delimiter + suffix;\n\t\t}\n\t\tPrivate.suffix.set(this, suffix);\n\t}\n\n\tslugifyOpts(replacement) {\n\t\treturn {\n\t\t\treplacement,\n\t\t\tremove: this.options.remove,\n\t\t\tlower: this.options.lower,\n\t\t};\n\t}\n\n\tcreateSlug(str, delim = this.delimiter) {\n\t\tconst slug = (str) ? slugify(str, this.slugifyOpts(delim)) : '';\n\t\tif (this.options.strict) {\n\t\t\t/** enable strict mode (html 4 / xhtml) */\n\t\t\treturn slug\n\t\t\t\t/** allowed characters: a-z, A-Z, 0-9, _, :, ., - */\n\t\t\t\t.replace(/[^\\w_:.-]/ig, this.delimiter)\n\t\t\t\t/** must start with letter */\n\t\t\t\t.replace(/^[^a-z]+/, '');\n\t\t}\n\t\treturn slug;\n\t}\n\n\tconfigure(opts = {}) {\n\t\tthis.options = { ...DefaultOptions, ...opts };\n\t\tthis.delimiter = this.options.delim || this.options.delimiter;\n\t\tthis.prefix = this.options.pre || this.options.prefix;\n\t\tthis.suffix = this.options.suf || this.options.suffix;\n\t}\n\n\tparse(_str, _options) {\n\t\tconst str = (typeof _str === 'string') ? _str : '';\n\t\tconst options = (typeof _str === 'object') ? _str : _options;\n\t\tif (options) this.configure(options);\n\t\tconst slug = this.createSlug(str);\n\t\tshort.characters(getCharacters((!this.options.delimiterInShortid) ? this.delimiter : null));\n\t\tconst shortid = short.generate();\n\t\tconst maxLength = this.options.maxLength - this.prefix.length - this.suffix.length;\n\t\tconst uniqueSlug = (slug)\n\t\t\t? [slug.substr(0, maxLength - shortid.length), shortid].join(this.delimiter)\n\t\t\t: shortid;\n\t\treturn {\n\t\t\tid: this.prefix + (slug.substr(0, maxLength) || shortid) + this.suffix,\n\t\t\tunique: this.prefix + uniqueSlug + this.suffix,\n\t\t\toriginal: str,\n\t\t\tslug,\n\t\t\tshortid,\n\t\t\tdelimiter: this.delimiter,\n\t\t\tprefix: this.prefix,\n\t\t\tsuffix: this.suffix,\n\t\t};\n\t}\n\n\tgenerate(str, options) {\n\t\treturn this.parse(str, options).id;\n\t}\n\n\tgenerateUnique(str, options) {\n\t\treturn this.parse(str, options).unique;\n\t}\n}\n\nmodule.exports = new WebId();\n"]}